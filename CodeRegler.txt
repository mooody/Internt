Skapa en ny module

    - Stå i mainappens katalog
    - skriv play new-module {modulensnamn}
    - lägg till det nedan inom måsvingar, messages som exempel

---------------------------------------------
    require:
    - play
    - messages -> messages 0.1
    {- modulnamn -> modulenamn}
    
    repositories:
    - My modules:
        type:     local
        artifact: ${application.path}/[module]
        contains:
            - messages
            {- modulenamn}
---------------------------------------------

          
    -  Lägg även till i mainappens routefil
    *  /{modulname}    module/{modulnamn}

Kör play dependencies

Routing måste köras med ex messages.MessagesController.index


Modulen ska installeras. Skapa en Job fil i roten på filträdet för modulen.
ex install.java

@OnApplicationStart
public class install extends Job{
    
    private String name = "Messages"; //valfritt -> det som visas för användaren
    private String controllerName = "MessagesController";
    private String moduleName = "messages"; //packagename
	//Behövs även default UserAccess
    
    public void doJob()
    {
        //Statisk metod i core.Module som installerar
        Module module = Module.install(this.name, this.controllerName, this.moduleName);
	//lägg till rättigheter till modulen
        if([Module]Rights.count("byModule", files)==0)
        {
            Logger.info("Installed rights to %s", files.name);
            [Module]Rights rights = new [Module]Rights();
            rights.module = files;
            rights.save();
        }
    }
}

Rättigheter sparas i en klass [Module]Rights
@Entity
@Table(name="[Module]_rights")
public class [Module]Rights extends ModuleRights{
    public [Module]Rights(){
        listOfRights = new TreeMap<String, Integer>();
        listOfRights.put("create.directory",1);
        listOfRights.put("erase.file",2);
        listOfRights.put("erase.directory",3);
        osv...
    }
}

Globala metoder i huvudcontroller är peek.
Denna ska hämtas med AJAX från startsidan. Och ge valfri information från modulen
Global settings är om superadministratören vill hantera modulen


Kodregler moduler
-----------------

skapa new module
skapa controller [ModuleName]controller 
controllern innehåller action index som startsida
lägg till modulen i mainappen routesfile


Beskrivning
----------------------
En användare skapar ett konto. Denna blir by default Admin användare. 
Användaren får ej ett företag by default. Utan det blir ett krav när denna loggar in för första gången.

När företaget skapas skapas samtidigt en grupp för företaget. Default-gruppen. Samt ett object av CompanyUserSettings. 
Där finns rättighetskopplingen för användaren. Om den har graden User, Admin eller Super

När en användare registrerar sig på sidan skapas ett admin konto.
Adminkontot är "tomt" från början. 

Det första administratören måste göra är att skapa ett företag, med namn och org.nr
När företaget skapas sparas även en "cus" CompanyUserSetting.

Det är inställningar användaren har i Företaget. (Användaren kan ha olika roller i olika företag)

Sedan kan administratören lägga in användare i sitt företag. Varje användare får default rollen som User.
Samt en cus till det företag som administratören är inloggad i just nu.


Administratören kan sedan skapa flera företag. För varje företag får administratören en ny cus.

Om användaren endast har ett företag och loggar in kommer denna direkt till företaget. Men om det finns flera företag kopplade till 
användarkontot kommer användaren först få välja vilket företag den vill logga in i.

Vid inlogg och endast vid inlogg läses cus ut och inställningarna sparas i användarobjektet. Denna kommer att ha dessa inställningar.
(Företag och moduler) under hela sessionen i detta företag. (Om administratören ändrar företag, loggar in i ett annaat genom "snabbinloggning" 
från företagsmenyn i Hantera företag. Går läses cus ut genom samma metod som i välkomstskärmen)

SuperAdministratören kan där efter lägga till moduler till Administratören. 




